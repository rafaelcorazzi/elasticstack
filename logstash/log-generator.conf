input {
    beats {
        port => 5044
    }
}
filter {
    grok {
        patterns_dir => "patterns"
        match => {
            "message" => ["%{COMMON_LOG} %{WORD:type}\|%{NUMBER:status:int}\|%{USERNAME:user}\|%{IP:ip}",

                "%{COMMON_LOG} %{WORD:type}\|%{NUMBER:duration:float}\|%{DATA:action}\|%{WORD:status}\|%{USERNAME:user}",

                "(?m)%{COMMON_LOG} %{DATA:description}\|%{GREEDYDATA:stacktrace}"

            ]
        }
    }
    mutate {
        remove_field => ["message", "prospector", "input"]
        rename => {
            "@timestamp" => "prossesTime"
        }
    }

    if ![type] {

        mutate {

            add_field => {
                "type" => "JAVA_ERROR"
            }

        }

    }

    if [type] == "LOGIN" {

        mutate {

            add_field => {
                "login" => true
            }

        }

        if [status] > 300 {

            mutate {

                replace => {
                    "login" => false
                }

            }

        }

        translate {

            field => "status"

            destination => "statusText"

            dictionary => {

                "200" => "Login Correcto"

                "201" => "Login Correcto tras varios intentos"

                "202" => "Login Correcto con actualizacion de password"

                "204" => "Login Automatico"

                "250" => "Login Recordado"

                "100" => "Usuario Suplantado"

                "150" => "Usuario Suplantado automticamente"

                "400" => "Usuario Bloqueado"

                "404" => "Usuario no Encontrado"

                "500" => "ContraseÃ±a expirada"

            }

        }

        geoip {

            source => "ip"

        }

    }

    date {

        match => ["date", "YYYY-MM-dd HH:mm:ss"]

    }

}


output {

    if "_grokparsefailure"
    not in [tags] {

        elasticsearch {

            hosts => "localhost:9200"

            index => "log-generator-%{+YYYY.MM.dd}"

        }

    } else {

        stdout {}

    }

}
